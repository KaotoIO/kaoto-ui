import { IStepProps } from '@kaoto/types';

export default [
  {
    id: 'twitter-search-source',
    name: 'twitter-search-source',
    type: 'START',
    UUID: 'twitter-search-source-0',
    integrationId: 'Camel Route-1',
    description:
      'Allows to get all tweets on particular keywords from Twitter.\n\nIt requires tokens that can be obtained by creating an application \nin the Twitter developer portal: https://developer.twitter.com/.',
    group: 'Twitter',
    icon: 'data:image/svg+xml',
    kind: 'Kamelet',
    maxBranches: 0,
    minBranches: 0,
    parameters: [
      {
        description:
          'The keywords to use in the Twitter search (Supports Twitter standard operators)',
        id: 'keywords',
        nullable: false,
        path: false,
        title: 'keywords',
        value: 'Apache Camel',
        type: 'string',
      },
      {
        description: 'The API Key from the Twitter application in the developer portal',
        id: 'apiKey',
        nullable: false,
        path: false,
        title: 'apiKey',
        value: 'your own',
        format: 'password',
        type: 'string',
      },
      {
        description: 'The API Key Secret from the Twitter application in the developer portal',
        id: 'apiKeySecret',
        nullable: false,
        path: false,
        title: 'apiKeySecret',
        value: 'your own',
        format: 'password',
        type: 'string',
      },
      {
        description: 'The Access Token from the Twitter application in the developer portal',
        id: 'accessToken',
        nullable: false,
        path: false,
        title: 'accessToken',
        value: 'your own',
        format: 'password',
        type: 'string',
      },
      {
        description: 'The Access Token Secret from the Twitter application in the developer portal',
        id: 'accessTokenSecret',
        nullable: false,
        path: false,
        title: 'accessTokenSecret',
        value: 'your own',
        format: 'password',
        type: 'string',
      },
    ],
    title: 'Twitter Search Source',
  },
  {
    id: 'pdf-action',
    name: 'pdf-action',
    type: 'MIDDLE',
    UUID: 'pdf-action-1',
    integrationId: 'Camel Route-1',
    description: 'Create a PDF',
    group: 'PDF',
    icon: 'data:image/svg+xml',
    kind: 'Kamelet',
    maxBranches: 0,
    minBranches: 0,
    parameters: [
      {
        defaultValue: 'Helvetica',
        description:
          'The font to use while generating the PDF. One of Courier, Courier-Bold, Courier-Oblique, Courier-BoldOblique, Helvetica, Helvetica-Bold, Helvetica-Oblique, Helvetica-BoldOblique, Times-Roman, Times-Bold, Times-Italic, Times-BoldItalic, Symbol, ZapfDingbats',
        id: 'font',
        nullable: false,
        path: false,
        title: 'font',
        type: 'string',
      },
      {
        defaultValue: '14.0',
        description: 'The Font size to use while generating the PDF',
        id: 'fontSize',
        nullable: false,
        path: false,
        title: 'fontSize',
        type: 'string',
      },
      {
        defaultValue: 'A4',
        description:
          'The Page size to use while generating the PDF. One of LETTER, LEGAL, A0, A1, A2, A3, A4, A5, A6',
        id: 'pageSize',
        nullable: false,
        path: false,
        title: 'pageSize',
        type: 'string',
      },
    ],
    title: 'PDF Action',
  },
  {
    id: 'caffeine-action',
    name: 'caffeine-action',
    type: 'MIDDLE',
    UUID: 'caffeine-action-2',
    integrationId: 'Camel Route-1',
    description:
      "Perform operations on a caffeine cache\n\nThe Kamelet expects the following headers to be set:\n\n- `caffeine-key` / `ce-caffeinekey`: as the cache key used in the operation\n\n- `caffeine-operation` / `ce-caffeineoperation`: as the operation to perform. It can be PUT, GET, INVALIDATE and CLEANUP.\n\nIf the caffeine-key header won't be set the exchange ID will be used as key.\n\nIf the caffeine-operation header won't be set, the GET operation will be performed.",
    group: 'Caffeine',
    icon: 'data:image/svg+xml',
    kind: 'Kamelet',
    maxBranches: 0,
    minBranches: 0,
    parameters: [
      {
        defaultValue: 'caffeine-cache',
        description: 'The name of the cache we want to use',
        id: 'cacheName',
        nullable: false,
        path: false,
        title: 'cacheName',
        type: 'string',
      },
    ],
    title: 'Caffeine Action',
  },
  {
    id: 'kafka-sink',
    name: 'kafka-sink',
    type: 'END',
    UUID: 'kafka-sink-3',
    integrationId: 'Camel Route-1',
    description:
      'Send data to Kafka topics.\n\nThe Kamelet is able to understand the following headers to be set:\n\n- `key` / `ce-key`: as message key\n\n- `partition-key` / `ce-partitionkey`: as message partition key\n\nBoth the headers are optional.',
    group: 'Kafka',
    icon: 'data:image/svg+xml',
    kind: 'Kamelet',
    maxBranches: 0,
    minBranches: 0,
    parameters: [
      {
        description: 'Comma separated list of Kafka topic names',
        id: 'topic',
        nullable: false,
        path: false,
        title: 'topic',
        value: 'The Topic Names',
        type: 'string',
      },
      {
        description: 'Comma separated list of Kafka Broker URLs',
        id: 'bootstrapServers',
        nullable: false,
        path: false,
        title: 'bootstrapServers',
        type: 'string',
      },
      {
        defaultValue: 'SASL_SSL',
        description:
          'Protocol used to communicate with brokers. SASL_PLAINTEXT, PLAINTEXT, SASL_SSL and SSL are supported',
        id: 'securityProtocol',
        nullable: true,
        path: false,
        title: 'securityProtocol',
        type: 'string',
      },
      {
        defaultValue: 'PLAIN',
        description: 'The Simple Authentication and Security Layer (SASL) Mechanism used.',
        id: 'saslMechanism',
        nullable: true,
        path: false,
        title: 'saslMechanism',
        type: 'string',
      },
      {
        description: 'Username to authenticate to Kafka',
        id: 'user',
        nullable: false,
        path: false,
        title: 'user',
        type: 'string',
      },
      {
        description: 'Password to authenticate to kafka',
        id: 'password',
        nullable: false,
        path: false,
        title: 'password',
        value: 'The Password',
        format: 'password',
        type: 'string',
      },
    ],
    title: 'Kafka Sink',
  },
] as IStepProps[];
