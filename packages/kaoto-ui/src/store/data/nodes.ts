import { IVizStepNode } from '@kaoto/types';

export default [
  {
    data: {
      connectorType: 'START',
      icon: 'data:image/svg+xml;base64',
      kind: 'Kamelet',
      label: 'aws-kinesis-source',
      step: {
        id: 'aws-kinesis-source',
        name: 'aws-kinesis-source',
        type: 'START',
        description: 'Receive data from AWS Kinesis.',
        group: 'AWS Kinesis',
        icon: 'data:image/svg+xml;base64',
        kind: 'Kamelet',
        maxBranches: 0,
        minBranches: 0,
        parameters: [
          {
            description:
              'The Kinesis stream that you want to access (needs to be created in advance)',
            id: 'stream',
            nullable: false,
            path: false,
            title: 'stream',
            type: 'string',
          },
          {
            description: 'The access key obtained from AWS',
            id: 'accessKey',
            nullable: false,
            path: false,
            title: 'accessKey',
            format: 'password',
            type: 'string',
          },
          {
            description: 'The secret key obtained from AWS',
            id: 'secretKey',
            nullable: false,
            path: false,
            title: 'secretKey',
            format: 'password',
            type: 'string',
          },
          {
            description: 'The AWS region to connect to',
            id: 'region',
            nullable: false,
            path: false,
            title: 'region',
            type: 'string',
          },
        ],
        required: ['stream', 'accessKey', 'secretKey', 'region'],
        title: 'AWS Kinesis Source',
        UUID: 'aws-kinesis-source0',
      },
    },
    id: 'dndnode_4',
    position: {
      x: 720,
      y: 250,
    },
    type: 'step',
    width: 80,
    height: 80,
  },
  {
    data: {
      connectorType: 'MIDDLE',
      icon: 'data:image/svg+xml;base64',
      kind: 'Kamelet',
      label: 'avro-deserialize-action',
      step: {
        id: 'avro-deserialize-action',
        name: 'avro-deserialize-action',
        type: 'MIDDLE',
        description: 'Deserialize payload to Avro',
        group: 'Actions',
        icon: 'data:image/svg+xml;base64',
        kind: 'Kamelet',
        maxBranches: 0,
        minBranches: 0,
        parameters: [
          {
            description:
              'The Avro schema to use during serialization (as single-line, using JSON format)',
            id: 'schema',
            nullable: false,
            path: false,
            title: 'schema',
            type: 'string',
          },
          {
            defaultValue: true,
            description: 'Indicates if the content must be validated against the schema',
            id: 'validate',
            nullable: true,
            path: false,
            title: 'validate',
            type: 'boolean',
          },
        ],
        required: ['schema'],
        title: 'Avro Deserialize Action',
        UUID: 'avro-deserialize-action1',
      },
    },
    id: 'dndnode_5',
    position: {
      x: 880,
      y: 250,
    },
    type: 'step',
    width: 80,
    height: 80,
  },
  {
    data: {
      connectorType: 'END',
      icon: 'data:image/svg+xml;base64',
      kind: 'Kamelet',
      label: 'aws-kinesis-firehose-sink',
      step: {
        id: 'aws-kinesis-firehose-sink',
        name: 'aws-kinesis-firehose-sink',
        type: 'END',
        description: 'Send message to an AWS Kinesis Firehose Stream',
        group: 'AWS Kinesis Firehose',
        icon: 'data:image/svg+xml;base64',
        kind: 'Kamelet',
        maxBranches: 0,
        minBranches: 0,
        parameters: [
          {
            description: 'The name of the stream we want to send to data to',
            id: 'streamName',
            nullable: false,
            path: false,
            title: 'streamName',
            type: 'string',
          },
          {
            description: 'The access key obtained from AWS',
            id: 'accessKey',
            nullable: false,
            path: false,
            title: 'accessKey',
            format: 'password',
            type: 'string',
          },
          {
            description: 'The secret key obtained from AWS',
            id: 'secretKey',
            nullable: false,
            path: false,
            title: 'secretKey',
            format: 'password',
            type: 'string',
          },
          {
            description: 'The AWS region to connect to',
            id: 'region',
            nullable: false,
            path: false,
            title: 'region',
            type: 'string',
          },
        ],
        required: ['streamName', 'accessKey', 'secretKey', 'region'],
        title: 'AWS Kinesis Firehose Sink',
        UUID: 'aws-kinesis-firehose-sink3',
      },
    },
    id: 'dndnode_6',
    position: {
      x: 1040,
      y: 250,
    },
    type: 'step',
    width: 80,
    height: 80,
  },
] as IVizStepNode[];
